public class MathFunctions {

    public double addition(double operand1, double operand2) {
        return operand1 + operand2;
    }

    public double subtraction(double operand1, double operand2) {
        return operand1 - operand2;
    }

    public double multiplication(double operand1, double operand2) {
        return operand1 * operand2;
    }

    public double division(double dividend, double divisor) {
        if (divisor == 0) {
            throw new IllegalArgumentException("Cannot divide by zero.");
        }
        return dividend / divisor;
    }

    public double squareRoot(double operand) {
        return Math.sqrt(operand);
    }

    public double power(double base, double exponent) {
        return Math.pow(base, exponent);
    }

    public double calculateMean(double[] numbers) {
        double sum = 0;
        for (double num : numbers) {
            sum += num;
        }
        return sum / numbers.length;
    }

    public double calculateVariance(double[] numbers) {
        double mean = calculateMean(numbers);
        double temp = 0;
        for (double num : numbers) {
            temp += (num - mean) * (num - mean);
        }
        return temp / numbers.length;
    }
}
